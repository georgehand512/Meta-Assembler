5	ORG			0	_	_	_	#_Program_code_starting_address_(_000_if_not_included_)
5	LOAD			"	"	"	"	#_Load_a_value_directly_to_memory_Program_Syntax_must_be_AAA_underscore_DDDD
4	LABEL:		"	_	_	"	#_Destination_label_for_Jumps_or_branch_instructions
2	JMP			E	"	_	"	#_Unconditional_Jump_destination_specified_by_label_text
3	ADDI			D	_	_	_	#_ADD_data_Accumulator_=_DDD_+_Acc
3	MOVEI			C	_	_	_	#_MOVE_data_into_Accumulator_Acc_=_DDD
3	MOVE			B	_	_	_	#_MOVE_from_specified_Address_into_Accumulator_Acc_=_AAA_Contents
3	STORE			A	_	_	_	#_STORE_Accumulator_contents_into_specified_Address_AAA_=_Acc
3	LDA_0			9	_	_	_	#_MOVE_data_into_Address_Register_0
3	LDA_1			8	_	_	_	#_MOVE_data_into_Address_Register_1
3	LDSP			7	_	_	_	#_MOVE_data_into_Stack_Pointer
2	JSR			6	"	_	"	#_Jump_to_Subroutine_destination_specified_by_label_text 
3	SUBI			5	_	_	_	#_Subtracts_Accumulator_value_from_data.__Acc_=_DDD_-_Acc
3	LDD_0			4	_	_	_	#_MOVE_data_into_Data_Register_0
3	LDD_1			3	_	_	_	#_MOVE_data_into_Data_Register_1
2	BZ			F	E	_	_	#_Branch_if_zero_(Relative)._If_accumulator_adder_Zero_bit_set
2	BNZ			F	D	_	_	#_Branch_if_Not_zero_(Relative)._If_accumulator_adder_Zero_bit_not_set
2	BMI			F	C	_	_	#_Branch_if_Minus_(Relative)._If_accumulator_adder_Negative_bit_set
2	BGT			F	B	_	_	#_Branch_Greater_Than,_Data_Reg_0_>_Data_Reg_1
2	BGE			F	A	_	_	#_Branch_Greater_Than_or_Equal,_Data_Reg_0_>=_Data_Reg_1
2	BEQ			F	9	_	_	#_Branch_Equal,_Data_Reg_0_==_Data_Reg_1
2	BNE			F	8	_	_	#_Branch_Not_Equal,_Data_Reg_0_!=_Data_Reg_1
2	BLE			F	7	_	_	#_Branch_Less_Than_or_Equal,_Data_Reg_0_<=_Data_Reg_1
2	BLT			F	6	_	_	#_Branch_Less_Than,_Data_Reg_0_<_Data_Reg_1
1	STA			F	F	E	_	#_STORE_Accumulator_value_to_Register_(A0=0,_A1=1,_D0=2,_D1=3)_=_Acc
1	(STA)+		F	F	D	_	#_STORE_Accumulator_value_to_Register&increment_(A0=0_or_A1=1_or_D0=2_or_D1=3)_=_Acc
1	MOVE(A)		F	F	C	_	#_MOVE_Address_contents_specified_by_Register_to_Acc_=_(A0=0_or_A1=1_or_D0=2_or_D1=3)
1	MOVE(A)+		F	F	B	_	#_MOVE_Address_contents_specified_by_Register&increment_to_Acc_=_(A0=0_or_A1=1_or_D0=2_or_D1=3)
1	ADD_AD+		F	F	A	_	#_Adds_Acc=Acc_+_contents_Specified_by_Any_Register&increment
1	SUB_AD+		F	F	9	_	#_Subtracts_Acc_=_Acc__Contents_Specified_by_Any_Register&increment
1	MOVE_REG		F	F	8	_	#_MOVE_contents_of_Any_Register_into_Accumulator__Acc_=_Reg_value
1	STORE_REG 		F	F	7	_	#_STORE_contents_of_Accumulator_into_Any_Register__(A0=0_or_A1=1_or_D0=2_or_D1=3)_=_Acc
1	STA_DREG		F	F	6	_	#_STORE_Data_Register_Contents_to_location_Specified_by_Add_Reg._Only:_D0_to_A0_Loc,_or_D1_to_A1_Loc
1	(STA)+_DREG		F	F	5	_	#_STORE_Data_Register_Contents_to_location_Specified_by_Add_Reg&+._Only:_D0_to_A0_Loc,_or_D1_to_A1_Loc
1	MOVE(A)_DREG	F	F	4	_	#_MOVE_from_location_to_Data_Register._Only:_A0_Loc_to_D0,_or_A1_Loc_to_D1
1	MOVE(A)+_DREG	F	F	3	_	#_MOVE_from_location_to_Data_Register,_then_inc_Add_Reg._Only:_A0_Loc_to_D0,_or_A1_Loc_to_D1
0	RTS			F	F	F	B	#_Return_from_Subroutine